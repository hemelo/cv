---
import "hotkeypad/reset.css";
import "hotkeypad/index.css";
import { type SocialIcon } from "@/types";
import { getBasics } from "@/utils/cv";
import { t } from "@/utils/translations";

const currentLang = Astro.url.pathname.startsWith("/pt-br") ? "pt-br" : "en";
const basics = getBasics(currentLang);
const { profiles } = basics;

const SOCIAL_ICONS: SocialIcon = {
  GitHub: `<svg
  width="16"
  height="16"
  viewBox="0 0 24 24"
  xmlns="http://www.w3.org/2000/svg"
  class="spotlight-icon"
  ><path
    fill="currentColor"
    d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"
  ></path></svg
>`,
  LinkedIn: `<svg
  height="16"
  width="16"
  viewBox="0 0 24 24"
  xmlns="http://www.w3.org/2000/svg"
  class="spotlight-icon"
  ><title>LinkedIn</title><path
    fill="currentColor"
    d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
  ></path></svg
>`,
  X: `<svg
  width="16"
  height="16"
  viewBox="0 0 24 24"
  xmlns="http://www.w3.org/2000/svg"
  class="spotlight-icon"
  ><title>X</title><path
    fill="currentColor"
    d="M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z"
  ></path></svg
>
`,
  Medium: `<svg
  height="16"
  width="16"
  viewBox="0 0 24 24"
  xmlns="http://www.w3.org/2000/svg"
  class="spotlight-icon"
  ><title>Medium</title><path
    fill="currentColor"
    xmlns="http://www.w3.org/2000/svg"
    d="M4.21 0A4.201 4.201 0 0 0 0 4.21v15.58A4.201 4.201 0 0 0 4.21 24h15.58A4.201 4.201 0 0 0 24 19.79v-1.093c-.137.013-.278.02-.422.02-2.577 0-4.027-2.146-4.09-4.832a7.592 7.592 0 0 1 .022-.708c.093-1.186.475-2.241 1.105-3.022a3.885 3.885 0 0 1 1.395-1.1c.468-.237 1.127-.367 1.664-.367h.023c.101 0 .202.004.303.01V4.211A4.201 4.201 0 0 0 19.79 0Zm.198 5.583h4.165l3.588 8.435 3.59-8.435h3.864v.146l-.019.004c-.705.16-1.063.397-1.063 1.254h-.003l.003 10.274c.06.676.424.885 1.063 1.03l.02.004v.145h-4.923v-.145l.019-.005c.639-.144.994-.353 1.054-1.03V7.267l-4.745 11.15h-.261L6.15 7.569v9.445c0 .857.358 1.094 1.063 1.253l.02.004v.147H4.405v-.147l.019-.004c.705-.16 1.065-.397 1.065-1.253V6.987c0-.857-.358-1.094-1.064-1.254l-.018-.004zm19.25 3.668c-1.086.023-1.733 1.323-1.813 3.124H24V9.298a1.378 1.378 0 0 0-.342-.047Zm-1.862 3.632c-.1 1.756.86 3.239 2.204 3.634v-3.634z"
  ></path></svg
>`,
  Portfolio: `<svg
  width="16"
  height="16"
  viewBox="0 0 24 24"
  xmlns="http://www.w3.org/2000/svg"
  class="spotlight-icon"
  ><title>Portfolio</title><path
    fill="currentColor"
    stroke-linecap="round"
    stroke-linejoin="round"
    d="M12 21a9.004 9.004 0 0 0 8.716-6.747M12 21a9.004 9.004 0 0 1-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 0 1 7.843 4.582M12 3a8.997 8.997 0 0 0-7.843 4.582m15.686 0A11.953 11.953 0 0 1 12 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0 1 21 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0 1 12 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 0 1 3 12c0-1.605.42-3.113 1.157-4.418"
  ></path></svg
>`,
  "Blog": `<svg
  width="16"
  height="16"
  viewBox="0 0 24 24"
  xmlns="http://www.w3.org/2000/svg"
  class="spotlight-icon"
  ><title>Blog</title><path
    fill="currentColor"
    stroke-linecap="round"
    stroke-linejoin="round"
    d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
  ></path></svg
>`,
};

const profilesInfo = profiles.map(({ network, url }) => {
  const icon = SOCIAL_ICONS[network];
  
  // Custom hotkey mapping to avoid conflicts
  const hotkeyMap: Record<string, string> = {
    "Portfolio": "ctrl+O", // O for Portfolio
    "Blog": "ctrl+B", // B for Blog
  };
  
  const hotkey = hotkeyMap[network] || `ctrl+${network[0].toUpperCase()}`;

  return {
    id: network,
    section: t(currentLang, "social"),
    title: `${t(currentLang, "visit")} ${network}`,
    url,
    icon,
    hotkey,
  };
});
---

<footer id="normal-footer" class="no-print flex flex-col gap-2">
  <div>
    {t(currentLang, "pressCmdK")}
  </div>
</footer>

<div class="footer-button no-print">
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="icon icon-tabler icon-tabler-command"
    width="32"
    height="32"
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke="#777"
    fill="none"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
    <path
      d="M7 9a2 2 0 1 1 2 -2v10a2 2 0 1 1 -2 -2h10a2 2 0 1 1 -2 2v-10a2 2 0 1 1 2 2h-10"
    ></path>
  </svg>
</div>

<div
  id="hotkeypad"
  data-placeholder={t(currentLang, "searchCommand")}
  data-info={JSON.stringify(profilesInfo)}
>
</div>

<script>
  interface Info {
    id: string;
    section: string;
    title: string;
    url: string;
    icon: string;
    hotkey: string;
    handler?: () => void;
  }

  import HotKeyPad from "hotkeypad";

  const currentLang = window.location.pathname.startsWith("/pt-br")
    ? "pt-br"
    : "en";
  const translations = {
    en: {
      portfolio: "Portfolio",
      printResume: "Print Resume",
      actions: "Actions",
      social: "Social",
      visit: "Visit",
    },
    "pt-br": {
      portfolio: "Portfólio",
      printResume: "Imprimir Currículo",
      actions: "Ações",
      social: "Social",
      visit: "Visitar",
    },
  };

  function t(lang: string, key: string): string {
    return (
      translations[lang as keyof typeof translations]?.[
        key as keyof typeof translations.en
      ] || key
    );
  }

  const hotkeypad = new HotKeyPad();
  const info = hotkeypad.instance.getAttribute("data-info") ?? "[]";
  const parsedInfo = JSON.parse(info) as Info[];

  const data = parsedInfo.map(({ url, hotkey, icon, id, section, title }) => {
    return {
      id,
      title,
      icon,
      hotkey,
      section,
      handler: () => {
        window.open(url, "_blank");
      },
    };
  });
  hotkeypad.setCommands([
    {
      id: "print",
      title: t(currentLang, "printResume"),
      icon: `<svg style="margin-right: 8px" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
  <path stroke-linecap="round" stroke-linejoin="round" d="M6.72 13.829c-.24.03-.48.062-.72.096m.72-.096a42.415 42.415 0 0 1 10.56 0m-10.56 0L6.34 18m10.94-4.171c.24.03.48.062.72.096m-.72-.096L17.66 18m0 0 .229 2.523a1.125 1.125 0 0 1-1.12 1.227H7.231c-.662 0-1.18-.568-1.12-1.227L6.34 18m11.318 0h1.091A2.25 2.25 0 0 0 21 15.75V9.456c0-1.081-.768-2.015-1.837-2.175a48.055 48.055 0 0 0-1.913-.247M6.34 18H5.25A2.25 2.25 0 0 1 3 15.75V9.456c0-1.081.768-2.015 1.837-2.175a48.041 48.041 0 0 1 1.913-.247m10.5 0a48.536 48.536 0 0 0-10.5 0m10.5 0V3.375c0-.621-.504-1.125-1.125-1.125h-8.25c-.621 0-1.125.504-1.125 1.125v3.659M18 10.5h.008v.008H18V10.5Zm-3 0h.008v.008H15V10.5Z" />
</svg>`,
      hotkey: "ctrl+P",
      section: t(currentLang, "actions"),
      handler: () => {
        window.print();
      },
    },
    ...data,
  ]);

  const footerButtons = document.querySelectorAll(".footer-button");
  footerButtons.forEach((button) => {
    button.addEventListener("click", () => {
      var event = new KeyboardEvent("keydown", {
        key: "K",
        code: "KeyK",
        keyCode: 75,
        which: 75,
        ctrlKey: true,
        altKey: false,
        shiftKey: false,
        metaKey: false,
      });
      document.dispatchEvent(event);
    });
  });
</script>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @media (min-width: 601px) {
    .footer-button {
      display: none;
    }
  }

  @media (max-width: 600px) {
    #normal-footer {
      display: none;
    }

    .footer-button {
      background: #fff;
      position: fixed;
      border: 1px solid #eee;
      right: 10px;
      bottom: 10px;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }
  }

  footer {
    @apply bg-skin-button-accent;
    position: fixed;
    bottom: 0px;
    width: 100%;
    padding-block: 8px;
    text-align: center;
    font-size: 0.85rem;

    view-timeline-name: --revealing;
    view-timeline-axis: block;

    animation: linear 0.3s fadeIn;
    animation-timeline: --revealing;
    animation-range: entry 100% cover 10%;
  }
  kbd {
    @apply bg-skin-muted;
    border-radius: 4px;
    padding: 2px 4px;
    font-size: 12px;
  }
  #hotkeypad {
    --hotkeypad-bg-kbd: rgb(var(--muted));
    --hotkeypad-bg-backdrop: rgba(var(--color-text-base), 0.1);
    --hotkeypad-bg-container: rgb(var(--color-fill));
    --hotkeypad-bg-item-hover: rgba(var(--color-text-base), 0.1);
    --hotkeypad-border-container: rgb(var(--muted));
    --hotkeypad-border-container-hover: rgb(var(--color-hue));
    --hotkeypad-fg-muted: rgb(var(--color-text-muted));
    --hotkeypad-fg: rgb(var(--color-text-base));
  }

  .spotlight-icon {
    margin-right: 8px;
    vertical-align: middle;
    display: inline-block;
  }
</style>
